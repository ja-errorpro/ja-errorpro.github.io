<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>C-Cpp on ErrorPro(黃乙家)</title><link>https://blog.ja-errorpro.cf/tags/c-cpp/</link><description>Recent content in C-Cpp on ErrorPro(黃乙家)</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 16 Aug 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.ja-errorpro.cf/tags/c-cpp/index.xml" rel="self" type="application/rss+xml"/><item><title>C++筆記-語法</title><link>https://blog.ja-errorpro.cf/posts/2021/cpp/</link><pubDate>Mon, 16 Aug 2021 00:00:00 +0000</pubDate><guid>https://blog.ja-errorpro.cf/posts/2021/cpp/</guid><description>目錄： 基礎C++模板
變數概論
邏輯與運算子
輸入/輸出與流
基礎C++模板 我在比CF、學科能力競賽還是平常練習都是用C++當主要語言，這裡就從基本的模板開始
*所有內容將以版本C++17為準
直接附上STL標頭檔：
1#include&amp;lt;bits/stdc++.h&amp;gt;注意，比競程時再用他，如果是其他用途的話最好是不要引入這個
這個標頭檔包含了之後會使用到的任何輸入輸出、資料結構，還藏有很多很方便的函式像是 &amp;lt;algorithm&amp;gt; 裡的__gcd(計算最大公因數)
不過有些編譯器不包含這個標頭檔，就自己Google找找對應的解決方法吧。
有時候看別人的Code還會看到一個標頭檔 &amp;lt;bits/extc++.h&amp;gt; ，那是內建紅黑樹、雜湊表的標頭檔，但我打競程到現在還沒用過他，所以就不提了。
然後為了方便，會在下面定義名稱空間 using namespace std; ，為什麼要加這個？因為我們需要將程式的幾乎所有東西都被定義到一個叫std的名稱空間裡，這樣我們在做像是輸入輸出(cin、cout)等操作時 不需要在前面加上 std:: 這種東西，也就是這段程式是起到了類似宣告成了全域變數的作用。
而每個程式都會需要一個叫做main的主函式，這個函式就是一切的起點，也是終點：
1int main(){ 2 return 0; // 函式結束後，要使用這句話回傳一個值，來告訴程式已經執行完了。 3} 在這裡我們就是將main函式宣告成int(整數)，因此結束後也要回傳一個整數才行，而它也可以被宣告為signed(我習慣宣告成這個)，這個等下會提到。
注意到，有些程式句後面加了分號有些卻沒有，這是C++中規定的，以分號作為一段程式的結束(句點)，而當我們在引入標頭檔以及有大括號時則不需要分號，因為在C++，&amp;ldquo;引入標頭檔&amp;quot;這個行為就是以換行為這段程式碼的結束。同樣地，只要編譯器讀完大括號，就算是將這裡面的東西執行完了。
總結程式碼： 1#include&amp;lt;bits/stdc++.h&amp;gt;2using namespace std; 3int main(){ 4 return 0; 5} 變數概論 首先我認為一開始學程式最容易搞不懂的是變數的作用範圍以及他們的型別，再來以下內容有些會適用於其他程式語言：
程式如何判別這是一個字？還是一個句子？還是一個變數？ 對於大部分程式語言來說，會用引號('',&amp;quot;&amp;quot;)來判斷。 在C++中，只要沒有引號，那這就是一個變數，而單引號意味著這是一個字元，雙引號則是字串 要注意，字元是只能由一個字母、數字或符號組成的，而字串是包含著一堆字元，此部分將後面會提到 我們要如何宣告一個變數？很簡單，格式為 (變數型態) (變數名稱)，我們可以一次宣告很多變數： (型態) (名稱),(名稱),(名稱)...;
ex: int a,b,c;</description></item></channel></rss>