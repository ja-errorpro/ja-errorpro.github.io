<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>mix on ErrorPro</title><link>/tags/mix/</link><description>Recent content in mix on ErrorPro</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 09 Jan 2023 00:00:00 +0000</lastBuildDate><atom:link href="/tags/mix/index.xml" rel="self" type="application/rss+xml"/><item><title>中原111資工計概上學期期末機測</title><link>/posts/2023/cycu_cal_111_finalexam/</link><pubDate>Mon, 09 Jan 2023 00:00:00 +0000</pubDate><guid>/posts/2023/cycu_cal_111_finalexam/</guid><description>答案僅供參考 答案僅供參考 答案僅供參考 我看起來像標準答案嗎 Pre 題目提供以下資料結構與函式
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 # include &amp;lt;stdlib.</description></item><item><title>【普物】 Schrodinger Equation Derivation</title><link>/posts/2023/schrodinger_equation_derivation/</link><pubDate>Tue, 03 Jan 2023 00:00:00 +0000</pubDate><guid>/posts/2023/schrodinger_equation_derivation/</guid><description>薛丁格方程 試著找到一方程式描述能量與波函數的關係。
波函數 已知波函數應形如 $$ \psi(x,t) = A e^{i(kx-\omega t)} $$ 的形式
若波函數對時間微分，則有 $$ \frac{\partial \psi}{\partial t} = -i \omega A e^{i(kx-\omega t)} = -i \omega \psi $$
若波函數對位置微分，則有 $$ \frac{\partial \psi}{\partial x} = i k A e^{i(kx-\omega t)} = i k \psi $$
對位置的二次微分，則有 $$ \frac{\partial^2 \psi}{\partial x^2} = -k^2 A e^{i(kx-\omega t)} = -k^2 \psi $$
寫成三維空間形式為 $$ \nabla^2 \psi = -k^2 A e^{i(kx-\omega t)} = -k^2 \psi $$</description></item><item><title>SQL 基本語法(sqlite3 in python)</title><link>/posts/2022/sql_basic/</link><pubDate>Sun, 18 Dec 2022 00:00:00 +0000</pubDate><guid>/posts/2022/sql_basic/</guid><description>環境 市面上有很多家 SQL，在效能、安全性、功能、語法上有些微差異，常見的有：
SQLite MySQL PostgreSQL SQL Server 在這裡使用 SQLite 來說明，在 Python 中可以直接使用 SQLite3 來操作。
安裝套件 1 pip install sqlite3 與資料庫連線 1 2 import sqlite3 conn = sqlite3.connect(&amp;#39;example.db&amp;#39;) 當此程式執行時，如果與程式同一個資料夾下有 example.db 檔案，則會連線到該檔案，如果沒有，則會建立一個新的 example.db 檔案。
並且 conn 將被建立為 Connection 物件表示資料庫。
建立表格 在建立表格前，需要一個 Cursor 來執行 SQL 各種指令。
1 cur = conn.cursor() 建立表格的語法如下：
1 2 3 4 5 6 CREATE TABLE 表格名稱 ( 第一欄名稱 資料類型, 第二欄名稱 資料類型, 第三欄名稱 資料類型, .... ); 在 SQLite 中，資料類型有以下幾種：</description></item><item><title>中原111資工計概上學期期中機測</title><link>/posts/2022/cycu_cal111_midterm/</link><pubDate>Mon, 07 Nov 2022 00:00:00 +0000</pubDate><guid>/posts/2022/cycu_cal111_midterm/</guid><description>(本人已放棄思考) 答案僅供參考 答案僅供參考 答案僅供參考 鬼才知道是不是正解 pA 實作NotLetter(char ch) function，如果ch不是字母就回傳true，反則false。
1 2 3 4 5 6 7 bool NotLetter(char ch){ if(ch &amp;gt;= &amp;#39;a&amp;#39; &amp;amp;&amp;amp; ch &amp;lt;= &amp;#39;z&amp;#39;) return false; if(ch &amp;gt;= &amp;#39;A&amp;#39; &amp;amp;&amp;amp; ch &amp;lt;= &amp;#39;Z&amp;#39;) return false; return true; } 補：事實上在 ctype.h已經有 isalpha() 可使用，但這裡不允許include其他東西。
pB 實作MonotonicIncreasing() function，讀入若干個整數，直到-99999，如果數組(不含-99999)非單調遞增則回傳false，否則或如果只有一個數則回傳true。
1 2 3 4 5 6 7 8 9 10 11 12 bool MonotonicIncreasing(){ int n; scanf(&amp;#34;%d&amp;#34;, &amp;amp;n); while(n!=-99999){ int m; scanf(&amp;#34;%d&amp;#34;, &amp;amp;m); if(m &amp;lt; n &amp;amp;&amp;amp; m !</description></item><item><title>【Git】Git分支的打開方式</title><link>/posts/2022/git_branch/</link><pubDate>Thu, 27 Oct 2022 00:00:00 +0000</pubDate><guid>/posts/2022/git_branch/</guid><description>當一個專案有許多人一起開發時，不能隨便commit，因此當需要增加功能、修正bug時可以開一個分支來進行，確認沒問題後再合併，就不會影響主要的生產線。
初始化Local Repo 詳見 上一篇文章
查看現在有哪些分支 1 $ git branch Output:
1 * master 新增分支 1 $ git branch main 這樣就會新增一個名為main的分支，但是還沒有切換到該分支，所以還是在master分支上。
重新命名分支 1 $ git branch -M cool # 將目前分支重新命名為cool 或者
1 $ git branch -m main cool # 將main分支重新命名為cool分支 刪除分支 1 $ git branch -d main # 刪除main分支 這時候可能會看到 error: The branch 'main' is not fully merged，因為main還沒被合併，不給刪除
可以使用 -D 強制刪除
1 $ git branch -D main 切換分支 1 $ git checkout main 如果分支不存在，可以使用 -b 來建立並切換到該分支</description></item><item><title>【Git】Git初始設定與環境</title><link>/posts/2022/git_initial/</link><pubDate>Thu, 27 Oct 2022 00:00:00 +0000</pubDate><guid>/posts/2022/git_initial/</guid><description>What is Git? 能夠紀錄更新歷史紀錄，進行復原(Rollback)、比較、合併(Merge)等等的分散式版本控制系統。 讓開發者(群)能夠更好管理專案。
分散式與中央式版控系統 中央式版控系統 需要一台伺服器，所有版本控制功能必須在這台伺服器上運作，如果伺服器壞了或沒網路就無法使用
分散式版控系統 即使沒有網路也能使用，可以先在本機版控直到能連上伺服器後再同步。
Git環境 Local Repo 我們在修改完檔案後，透過git add 將檔案加入暫存區，再透過git commit將檔案加入Local Repo。
Remote Repo Remote Repo是一個遠端的Git伺服器，我們可以將Local Repo push 到 Remote Repo，也可以從Remote Repo pull 到 Local Repo。
Git安裝 Windows 到以下網址下載合適的版本並進行安裝
Git for Windows
安裝過程直接按到底即可，接著打開Git Bash，可從開始功能表或是桌面右鍵選擇Git Bash Here。
這套軟體能模擬Linux的環境，所以我們可以在這裡使用Linux的指令。
Linux 非常簡單，打開你的終端機
1 2 $ sudo apt update $ sudo apt install git -y 初始設定 1 2 3 4 5 $ git config --global user.name &amp;#34;你的名字&amp;#34; $ git config --global user.</description></item><item><title>【Discord 聊天機器人】 - Discord interactions.py 介紹與開始</title><link>/posts/2022/discordpy2_and_interactions/</link><pubDate>Wed, 19 Oct 2022 00:00:00 +0000</pubDate><guid>/posts/2022/discordpy2_and_interactions/</guid><description>Why discord-py-interactions(以下簡稱 dcpi)? 支援更多操作如斜線指令、按鈕、選單，且簡單易懂
簡介 經過大量搜尋資料，發現dcpi的介紹特別少， 因此閱讀完官方API後想記錄下來翻成中文並做個整理。
先備知識 需知道如何在 Discord Developers Applications 裡創建機器人 需知道命令列的基本操作 環境建置 既然是py當然要安裝Python(目前已測試3.8~3.10可用)
Python官網
安裝 dcpi(以編寫此篇文時的版本為主)
dcpi Pypi
1 $ pip3 install discord-py-interactions==4.3.4 Quick Start 根據這份API文件
我們先創建一個專門放Discord Bot的資料夾，然後在裡面新增一個檔案名為bot.py， 並在DC的開發應用頁面創建好機器人
然後複製以下code，將your-bot-token換成機器人的token，注意不要將token公開給別人。
1 2 3 4 5 6 7 8 9 # 導入interactions套件，如果報錯的話檢查一下環境建置是否有問題 import interactions # 宣告bot這個變數為一個客戶端，記得將your-bot-token改成Discord bot的token # 我們需要告訴Discord我們要監聽哪些事件，透過設定intents達成 bot = interactions.Client(token=&amp;#34;your-bot-token&amp;#34;,intents=interactions.flags.Intents.ALL) # 啟動機器人 bot.start() 接著執行它
1 $ python3 bot.py 這樣我們的機器人就成功上線了
第一個斜線指令 修改程式碼
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 import interactions bot = interactions.</description></item><item><title>Vim 極簡教學</title><link>/posts/2022/vim_simple_tutorial/</link><pubDate>Tue, 13 Sep 2022 00:00:00 +0000</pubDate><guid>/posts/2022/vim_simple_tutorial/</guid><description>簡介 Vim是一種開源的編輯器，是Vi的進化版，由於操作方便，有許多人很愛用，是作為Linux OS主要的編輯器之一。
起步 若要使用vim編輯檔案，請在命令列中輸入 vim xxx.yyy，如果xxx.yyy存在就會直接進入普通模式並可瀏覽檔案；
如果不存在，就會在儲存後新建一個。
模式 Vim主要有四種模式： 普通模式、編輯模式、視覺模式、指令模式
普通模式 初始畫面，可使用方向鍵控制游標，或用Page UP/Down換頁，而任何有關編輯的指令都要在此模式下進行
以下是常用的編輯指令
dd - 刪除整行 (n)dd - 刪除從游標往下數n行 yy - 複製整行 (n)yy - 複製從游標往下數n行 u - 復原(undo)動作 Ctrl+r - 重做(redo)動作 . - 重複上一個動作 x - 刪除字元 X - 刪除前一個字元(Backspace) &amp;gt;&amp;gt; - 縮排 &amp;lt;&amp;lt; - 反向縮排 編輯模式 在普通模式按下 i(Insert), o(Open), a(Append) 等鍵就會進入編輯模式，此時可以看到視窗最下方出現 -- INSERT --，即可對檔案編輯
按下 Esc 即可回到普通模式，此時 -- INSERT -- 會消失
視覺(選取)模式 在普通模式按下 v 即可進入視覺模式，此時可以看到視窗最下方出現 -- VISUAL --，可以使用方向鍵選取文字，並使用 w 選取下一個單字的開頭或 $ 選取後面整行。</description></item><item><title>大學面試心得</title><link>/posts/2022/college_interview/</link><pubDate>Fri, 20 May 2022 00:00:00 +0000</pubDate><guid>/posts/2022/college_interview/</guid><description>申請入學(新課綱第一屆白老鼠) 身為2003/9月出生的我，變成教育部爆改課綱的頭一批白老鼠orz&amp;hellip;，可謂生於SARS，死於武漢！
以為今年數學會比110簡單，結果更難😠，我的學測直接燒到只剩43級分。
聽到這成績後我還是硬著頭皮把六個志願全都填電資/資工，
以下是我的一階正取校系以及二階面試狀況(20220530更新: 穩到不行欸好讚)：
中原資工 - 疫情取消面試 - 備14 中原資電不分系 - 疫情取消面試 -正8 逢甲資電不分系 - 521面試結束 - 正30 元智資工 - 無面試 - 正76 東海資工 - 522面試結束 - 正3 哭啊只剩兩間面試，飯店都訂好了，直接噴掉1000
面試過程 逢甲資電不分系: 印象不錯，有熱情的學長姊(?，進去前會一直跟我們聊天(降低緊張感？
而且教授非常友善、和藹(幸運遇到白臉)~ 聽說另一間試場是黑臉教授
面試方式是一次六個人對三位教授，大概是這樣坐的：
教授 教授 教授
------長桌------
1(沒來) 2 3 4 5 我(6) 門
一開始教授讓我們輪流自我介紹，
而當右邊的教授聽到我參加APCS跟能競就問學過什麼語言，然後從我開始倒序輪流回答(我忘了講資奧初選被旁邊講走orz&amp;hellip;。
接著教授就問還有什麼問題
我問了有關往國外發展的條件，然後其他人也都問一問時間就到了。
整場就像是跟教授在聊天而已，真的不用太緊張，
第一天面試感覺非常好，希望第二天東海也能順利~
東海資工資電組: 一人對三個教授，而且也非常友善不用緊張
首先自我介紹，然後
教授(簡稱P): 你的經歷滿豐富的，分享一件你印象深刻的歷程跟收穫
我說了Farmbot(點我查看)的事
P: 你APCS考得不錯為什麼不填APCS組
我: 我認為APCS就是測驗自己的程式能力，沒有把他當我的入學管道
P: 我覺得你備審用Linux介面當封面的想法很有創意，而且你也有提到之前參加我們學校的AI營隊&amp;hellip;
^當事封面
P: 你還有報哪些科系，如果都上會選哪間
我回答比較保守，把每間優點都講出來後說再考慮</description></item><item><title>自架CodeServer，實現隨時隨地都能寫程式</title><link>/posts/2022/codeserver/</link><pubDate>Wed, 16 Feb 2022 00:00:00 +0000</pubDate><guid>/posts/2022/codeserver/</guid><description>最近架了一台CodeServer，那是一個具有VSCode的伺服器平台，要他支援什麼語言照著一般設定VSC2方式就行~
先備條件： 會用Windows跟Ubuntu Docker以及容器的基礎操作 參考資源： codercom/Code-server
本文所用配備及版本： 物理機環境： Windows 11 Pro 21H2 Code Server版本： v4.0.2 步驟 (這裡省略前面Docker的安裝步驟)
先開一個資料夾名為CodeServer，這是伺服器的根目錄 新增一個檔案，檔名為docker-compose.yml 編輯檔案，貼上這些： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 version: &amp;#34;2.1&amp;#34; services: code-server: image: codercom/code-server container_name: code-server environment: - TZ=ASIA/TAIPEI - PASSWORD=&amp;lt;設定進入伺服器的密碼&amp;gt; - SUDO_PASSWORD=&amp;lt;設定Root權限的密碼&amp;gt; volumes: - ./appdata/code-server/project:/home/coder/project - ./appdata/code-server/.local:/home/coder/.local ports: - &amp;lt;PORT&amp;gt;:8080 restart: always (1) version: 不用動他
(2) image: 指定目標映像，Docker會試著到上面給的網站找尋映像檔
(3) container_name: 給容器隨便取一個名字
(4) TZ: Timezone時區</description></item></channel></rss>