<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on ErrorPro</title>
    <link>http://localhost:1313/tags/python/</link>
    <description>Recent content in Python on ErrorPro</description>
    <generator>Hugo</generator>
    <language>zh-Hant-TW</language>
    <lastBuildDate>Sun, 18 Dec 2022 00:00:00 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SQL 基本語法(sqlite3 in python)</title>
      <link>http://localhost:1313/posts/2022/sql_basic/</link>
      <pubDate>Sun, 18 Dec 2022 00:00:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/2022/sql_basic/</guid>
      <description>環境 市面上有很多家 SQL，在效能、安全性、功能、語法上有些微差異，常見的有：&#xA;SQLite MySQL PostgreSQL SQL Server 在這裡使用 SQLite 來說明，在 Python 中可以直接使用 SQLite3 來操作。&#xA;安裝套件 1 pip install sqlite3 與資料庫連線 1 2 import sqlite3 conn = sqlite3.connect(&amp;#39;example.db&amp;#39;) 當此程式執行時，如果與程式同一個資料夾下有 example.db 檔案，則會連線到該檔案，如果沒有，則會建立一個新的 example.db 檔案。&#xA;並且 conn 將被建立為 Connection 物件表示資料庫。&#xA;建立表格 在建立表格前，需要一個 Cursor 來執行 SQL 各種指令。&#xA;1 cur = conn.cursor() 建立表格的語法如下：&#xA;1 2 3 4 5 6 CREATE TABLE 表格名稱 ( 第一欄名稱 資料類型, 第二欄名稱 資料類型, 第三欄名稱 資料類型, .... ); 在 SQLite 中，資料類型有以下幾種：</description>
    </item>
    <item>
      <title>【Discord 聊天機器人】 - Discord interactions.py 介紹與開始</title>
      <link>http://localhost:1313/posts/2022/discordpy2_and_interactions/</link>
      <pubDate>Wed, 19 Oct 2022 00:00:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/2022/discordpy2_and_interactions/</guid>
      <description>Why discord-py-interactions(以下簡稱 dcpi)? 支援更多操作如斜線指令、按鈕、選單，且簡單易懂&#xA;簡介 經過大量搜尋資料，發現dcpi的介紹特別少， 因此閱讀完官方API後想記錄下來翻成中文並做個整理。&#xA;先備知識 需知道如何在 Discord Developers Applications 裡創建機器人 需知道命令列的基本操作 環境建置 既然是py當然要安裝Python(目前已測試3.8~3.10可用)&#xA;Python官網&#xA;安裝 dcpi(以編寫此篇文時的版本為主)&#xA;dcpi Pypi&#xA;1 $ pip3 install discord-py-interactions==4.3.4 Quick Start 根據這份API文件&#xA;先創建一個專門放Discord Bot的資料夾，然後在裡面新增一個檔案名為bot.py， 並在DC的開發應用頁面創建好機器人&#xA;然後複製以下code，將your-bot-token換成機器人的token，注意不要將token公開給別人。&#xA;1 2 3 4 5 6 7 8 9 # 導入interactions套件，如果報錯的話檢查一下環境建置是否有問題 import interactions # 宣告bot這個變數為一個客戶端，記得將your-bot-token改成Discord bot的token # 我們需要告訴Discord我們要監聽哪些事件，透過設定intents達成 bot = interactions.Client(token=&amp;#34;your-bot-token&amp;#34;,intents=interactions.flags.Intents.ALL) # 啟動機器人 bot.start() 接著執行它&#xA;1 $ python3 bot.py 這樣機器人就成功上線了&#xA;第一個斜線指令 修改程式碼&#xA;1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 import interactions bot = interactions.</description>
    </item>
    <item>
      <title>Python遊戲設計</title>
      <link>http://localhost:1313/posts/2021/pythongame/</link>
      <pubDate>Mon, 11 Jan 2021 00:00:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/2021/pythongame/</guid>
      <description>FOR Python遊戲設計 檔案庫: Here&#xA;Python程式列表(全自寫): LIST&#xA;Cocos2d: Docs&#xA;第一堂: IDE: pycharm CE, Module: cocos2d 彭彭-Python程式設計入門&#xA;Colab&#xA;CBE30338&#xA;記得寫程式可放個小抄在旁邊&amp;hellip;&#xA;有問題請點這個&#xA;作業: 遊玩CodeCombat&#xA;第二堂 安裝Pycharm : Pycharm&#xA;Community版為開源,免費 / Professional為完整版(30天免費試用)&#xA;需要先安裝Python (Ver. &amp;gt;3.7),Windows:可在Microsoft市集搜尋Python / MacOS可在官網上下載 / Linux有些版本已預安裝,安裝方式: ($ apt update &amp;amp;&amp;amp; apt install python3)&#xA;安裝方式: Here&#xA;設定: here&#xA;安裝Cocos2d: Files&amp;gt;Setting&amp;gt;Project: Inter..&amp;gt;(+)&amp;gt;搜尋cocos2d&amp;gt;安裝&#xA;學程式的技巧: 先抄再讀 不懂可Google&#xA;Vim: 分為命令模式,插入模式,底線命令模式,視覺模式&#xA;命令模式: 為預設模式,在任何模式中按下Esc即可到此模式,可按下某些鍵來切換模式&#xA;插入模式: 切換方式:在命令模式中按下i,a,o等按鍵,可在游標位置插入需要的文字&#xA;底線命令模式: 切換方式:按下:,可輸入指令操作內容,&#xA;離開: :q&#xA;強制離開: :q!&#xA;存檔不離開: :w&#xA;強制存檔不離開: :w!&#xA;存檔並離開: :wq</description>
    </item>
  </channel>
</rss>
